
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

/*
Set up API key so it remains private
 */
Properties privateProperties = new Properties()
privateProperties.load(project.rootProject.file('local.properties').newDataInputStream())
def FIREBASE_URL = '"' + privateProperties.getProperty("FIREBASE_URL") + '"' ?: '"You should define your private firebase url in local.properties file"';
android.buildTypes.each { type ->;
    type.buildConfigField 'String', 'FIREBASE_URL', FIREBASE_URL
}

dependencies {
    compile "com.android.support:support-v4:23.0.0"
    compile "com.android.support:gridlayout-v7:23.0.0"
    compile "com.android.support:cardview-v7:23.0.0"
    compile 'com.firebase:firebase-client-android:2.3.1+'
}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 23
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

    // Firebase includes duplicates
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

}















